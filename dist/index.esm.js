!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.PurifyHTML=t():e.PurifyHTML=t()}(self,(function(){return function(){"use strict";var e={d:function(t,r){for(var o in r)e.o(r,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:r[o]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r:function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{default:function(){return c},setParser:function(){return l}});const r=e=>{if(!("childNodes"in e))return!1;for(let t=0;t<e.childNodes.length;t++)8===e.childNodes[t].nodeType&&e.childNodes[t].remove()},o=(()=>{const e=(t,r=0)=>{if(t._d=r,!t.children.length)return r;[...t.children].forEach((t=>e(t,r+1)))};return t=>(e(t),[...t.querySelectorAll("*")].sort(((e,t)=>t._d-e._d)))})(),n=e=>{try{return new URL(e)}catch(e){return null}},s=e=>{if(Object.prototype.hasOwnProperty.call(globalThis,"structuredClone"))return structuredClone(e);const t={};for(let r in e)"object"==typeof e[r]?t[r]=s(e[r]):t[r]=e[r];return t},a={"%correct-link%"(e){return{remove:null===n(e)}},"%http-link%"(e){const t=n(e);return{remove:null===t||"http:"!==t.protocol}},"%https-link%"(e){const t=n(e);return{remove:null===t||"https:"!==t.protocol}},"%ftp-link%"(e){const t=n(e);return{remove:null===t||"ftp:"!==t.protocol}},"%https-link-without-search-params%"(e){const t=n(e);return{remove:null===t||""!==t.search||"https:"!==t.protocol}},"%http-link-without-search-params%"(e){const t=n(e);return{remove:null===t||""!==t.search||"http:"!==t.protocol}},"%same-origin%"(e){const t=n(e);return{remove:null===t||globalThis.location.origin!==t.origin}}};let i=(()=>{const e=(new DOMParser).parseFromString("","text/html").querySelector("body");return{parse(t){return e.innerHTML=t,e},stringify(e){return e.innerHTML}}})();const l=(e={})=>Object.prototype.hasOwnProperty.call(e,"parse")?Object.prototype.hasOwnProperty.call(e,"stringify")?(i=e,1):(console.error('cannot to find method "stringify" in custom parser!',e),0):(console.error('cannot to find method "parse" in custom parser!',e),0);var c=class{constructor(e=[]){var t;this.removeComments=!0,this.allowedTags=(t=e,t.map(s)).reduce(((e,t)=>{switch(typeof t){case"string":"#comments"===t?this.removeComments=!1:e[t]=Object.assign(e[t]||{},{});break;case"object":e[t.name]=Object.assign(e[t]||{},(e=>{const t=[];return Object.prototype.hasOwnProperty.call(e,"attributes")||(e.attributes=[]),e.attributes.forEach((e=>{switch(typeof e){case"string":t.push({name:e});break;case"object":t.push(e)}})),e.attributes=t,e})(t))}return e}),{}),this.whiteList=Object.keys(this.allowedTags),this.sanitize.bind(this)}sanitize(e){const t=i.parse(e);return this.removeComments&&r(t),o(t).forEach((e=>{const t=e.tagName.toLowerCase();if(this.whiteList.includes(t)){const o=this.allowedTags[t];if(this.removeComments&&!0!==o.dontRemoveComments&&r(e),Object.prototype.hasOwnProperty.call(o,"attributes")&&o.attributes.length>0){let t=[],r=[];for(let n=0;n<e.attributes.length;n++){const s=e.attributes[n],i=o.attributes.find((e=>e.name===s.name));i?Object.prototype.hasOwnProperty.call(i,"value")&&("string"==typeof i.value?s.value!==i.value&&r.push(s.name):i.value instanceof RegExp?i.value.test(s.value)||r.push(s.name):Array.isArray(i.value)?i.value.includes(s.value)||r.push(s.name):"object"==typeof i.value&&Object.prototype.hasOwnProperty.call(i.value,"preset")&&Object.prototype.hasOwnProperty.call(a,i.value.preset)?a[i.value.preset](s.value).remove&&r.push(s.name):r.push(s.name)):t.push(s.name)}t.forEach((t=>e.removeAttribute(t))),r.forEach((t=>{return r=t,e.setAttribute(r,"");var r}))}else{const t=[];for(let r=0;r<e.attributes.length;r++)t.push(e.attributes[r].name);t.forEach((t=>e.removeAttribute(t)))}}else this.removeComments&&r(e),e.insertAdjacentHTML("afterend",e.innerHTML),e.remove()})),i.stringify(t)}toHTMLEntities(e){return e.split("").map((e=>`&#${e.charCodeAt()};`)).join("")}};return t}()}));