(function(o,i){typeof exports=="object"&&typeof module!="undefined"?i(exports):typeof define=="function"&&define.amd?define(["exports"],i):(o=typeof globalThis!="undefined"?globalThis:o||self,i(o.PurifyHTML={}))})(this,function(o){"use strict";var S=Object.defineProperty;var C=(o,i,c)=>i in o?S(o,i,{enumerable:!0,configurable:!0,writable:!0,value:c}):o[i]=c;var v=(o,i,c)=>(C(o,typeof i!="symbol"?i+"":i,c),c);const i=()=>{if(globalThis.DOMParser===void 0)throw`globalThis.DOMParser is not defined!
It seems that you use purify-html in node environment.
For node environment you need to add HTML parser by yourself.
See https://github.com/oleksandr-dukhovnyy/purify-html?tab=readme-ov-file#node-js for details.`;const e=new DOMParser().parseFromString("","text/html").querySelector("body");return{parse(t){return e.innerHTML=t,e},stringify(t){return t.innerHTML}}},c=(e,t)=>e.setAttribute(t,""),b=e=>{if("childNodes"in e)for(let t=e.childNodes.length-1;t>0;t--)e.childNodes[t].nodeType===8&&e.childNodes[t].remove();else return!1},T=(()=>{const e=(t,r=0)=>{if(t._d=r,t.children.length)[...t.children].forEach(u=>e(u,r+1));else return r};return t=>(e(t),[...t.querySelectorAll("*")].sort((r,u)=>u._d-r._d).map(r=>(delete r._d,r)))})(),L=e=>{const t=[];return Object.prototype.hasOwnProperty.call(e,"attributes")||(e.attributes=[]),e.attributes.forEach(r=>{switch(typeof r){case"string":t.push({name:r});break;case"object":t.push(r);break}}),e.attributes=t,e},p=e=>{try{return new URL(e)}catch(t){return null}},y=e=>{if(typeof e=="string")return e;if(Array.isArray(e))return e.map(t=>y(t));if(typeof e=="object"&&e!==null){const t={};for(const r in e)e[r]instanceof RegExp?t[r]=e[r]:typeof e[r]=="object"?t[r]=y(e[r]):t[r]=e[r];return t}return e},k=e=>e.map(y),w={"%correct-link%"(e){return console.warn("Default presets is deprecated and will be removed in 2.0.0. See release notes for v1.5.4"),{remove:p(e)===null}},"%http-link%"(e){console.warn("Default presets is deprecated and will be removed in 2.0.0. See release notes for v1.5.4");const t=p(e);return{remove:t===null||t.protocol!=="http:"}},"%https-link%"(e){console.warn("Default presets is deprecated and will be removed in 2.0.0. See release notes for v1.5.4");const t=p(e);return{remove:t===null||t.protocol!=="https:"}},"%ftp-link%"(e){console.warn("Default presets is deprecated and will be removed in 2.0.0. See release notes for v1.5.4");const t=p(e);return{remove:t===null||t.protocol!=="ftp:"}},"%https-link-without-search-params%"(e){console.warn("Default presets is deprecated and will be removed in 2.0.0. See release notes for v1.5.4");const t=p(e);return{remove:t===null||t.search!==""||t.protocol!=="https:"}},"%http-link-without-search-params%"(e){console.warn("Default presets is deprecated and will be removed in 2.0.0. See release notes for v1.5.4");const t=p(e);return{remove:t===null||t.search!==""||t.protocol!=="http:"}},"%same-origin%"(e){console.warn("Default presets is deprecated and will be removed in 2.0.0. See release notes for v1.5.4");const t=p(e);return{remove:t===null||globalThis.location.origin!==t.origin}}};let d;class g{constructor(t=[]){v(this,"removeComments",!0);v(this,"allowedTags",{});v(this,"whiteList");d||(d=i()),this.allowedTags=k(t).reduce((r,u)=>{switch(typeof u){case"string":{u==="#comments"?this.removeComments=!1:r[u]=Object.assign(r[u]||{},{});break}case"object":r[u.name]=Object.assign(r[u.name]||{},L(u))}return r},{}),this.whiteList=Object.keys(this.allowedTags),this.sanitize.bind(this)}sanitize(t){const r=d.parse(t);return this.removeComments&&b(r),T(r).forEach(a=>{const O=a.tagName.toLowerCase();if(this.whiteList.includes(O)){const m=this.allowedTags[O];if(this.removeComments&&m.dontRemoveComments!==!0&&b(a),Object.prototype.hasOwnProperty.call(m,"attributes")&&m.attributes.length>0){const h=[],s=[];for(let f=0;f<a.attributes.length;f++){const n=a.attributes[f],l=m.attributes.find(j=>j.name===n.name);l?Object.prototype.hasOwnProperty.call(l,"value")&&(typeof l.value=="string"?n.value!==l.value&&s.push(n.name):typeof l.value=="function"?l.value(n.value)||s.push(n.name):l.value instanceof RegExp?l.value.test(n.value)||s.push(n.name):Array.isArray(l.value)?l.value.includes(n.value)||s.push(n.name):typeof l.value=="object"&&Object.prototype.hasOwnProperty.call(l.value,"preset")&&Object.prototype.hasOwnProperty.call(w,l.value.preset)?w[l.value.preset](n.value).remove&&s.push(n.name):s.push(n.name)):h.push(n.name)}h.forEach(f=>a.removeAttribute(f)),s.forEach(f=>c(a,f))}else{const h=[];for(let s=0;s<a.attributes.length;s++)h.push(a.attributes[s].name);h.forEach(s=>a.removeAttribute(s))}}else this.removeComments&&b(a),a.insertAdjacentHTML("afterend",a.innerHTML),a.remove()}),d.stringify(r)}toHTMLEntities(t){return t.split("").map(r=>`&#${r.charCodeAt(0)};`).join("")}}const M=e=>e?Object.prototype.hasOwnProperty.call(e,"parse")?Object.prototype.hasOwnProperty.call(e,"stringify")?(d=e,1):(console.error('cannot to find method "stringify" in custom parser!',e),0):(console.error('cannot to find method "parse" in custom parser!',e),0):(console.error("customParser is null!"),0);o.default=g,o.sanitizer=g,o.setParser=M,Object.defineProperties(o,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
//# sourceMappingURL=index.umd.js.map
